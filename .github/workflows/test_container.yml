name: Test Container
run-name: ${{ github.actor }} is testing ${{ github.ref }} ðŸš€
on:
  workflow_dispatch:
jobs:
    test_job:
      env:
        VORON_TOOLKIT_OUTPUT_DIR: workflow_output
        VORON_TOOLKIT_INPUT_DIR: tests/test_repository_root/printer_mods
        VORON_TOOLKIT_VERBOSE: true
        VORON_TOOLKIT_GH_STEP_SUMMARY: true
      runs-on: ubuntu-latest
      steps:
      # Checkout the entire repo
      - name: Checkout repo
        uses: actions/checkout@v4
      # Fake tj-actions/changed-files by creating a list of all files in the test directory
      - name: Fake tj-actions/changed-files
        id: list_files
        run: |
          export TEST=$(find ./tests/test_repository_root/printer_mods/ -type f -print)
          echo "FILE_LIST<<EOF" >> $GITHUB_OUTPUT
          echo "$TEST" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      # Sanitize the file list
      - name: Sanitize file list
        id: sanitize_file_list
        uses: docker://ghcr.io/vorondesign/voron_toolkit_docker:latest
        env:
          FILE_LIST_SANITIZE_INPUT: ${{ steps.list_files.outputs.FILE_LIST }}
        with:
          args: sanitize-file-list
      # Run whitespace checks based on files in the test directory
      - name: Whitespace Checker
        uses: docker://ghcr.io/vorondesign/voron_toolkit_docker:latest
        env:
          WHITESPACE_CHECKER_IGNORE_WARNINGS: false
        with:
          args: check-whitespace
      - name: Mod Structure Checker
        uses: docker://ghcr.io/vorondesign/voron_toolkit_docker:latest
        env:
          MOD_STRUCTURE_CHECKER_IGNORE_WARNINGS: false
        with:
          args: check-mod-structure
      # Run the corruption checker
      - name: Corruption Checker
        uses: docker://ghcr.io/vorondesign/voron_toolkit_docker:latest
        env:
          CORRUPTION_CHECKER_IGNORE_WARNINGS: true
        with:
          args: check-stl-corruption
      # Run the rotation checker
      - name: Rotation Checker
        uses: docker://ghcr.io/vorondesign/voron_toolkit_docker:latest
        env:
          ROTATION_CHECKER_IGNORE_WARNINGS: true
          ROTATION_CHECKER_IMAGEKIT_ENDPOINT: ./img
          ROTATION_CHECKER_IMAGEKIT_SUBFOLDER: test_run
        with:
          args: check-stl-rotation
      # Generate a README
      - name: Generate README
        uses: docker://ghcr.io/vorondesign/voron_toolkit_docker:latest
        env:
          README_GENERATOR_MARKDOWN: true
          README_GENERATOR_JSON: true
        with:
          args: generate-readme
      # Upload Artifact
      - uses: actions/upload-artifact@65d862660abb392b8c4a3d1195a2108db131dd05
        with:
          name: ci_output
          path: workflow_output
